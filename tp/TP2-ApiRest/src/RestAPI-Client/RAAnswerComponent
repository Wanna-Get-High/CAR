WAComponent subclass: #RAAnswerComponent	instanceVariableNames: 'content root loginInformation'	classVariableNames: ''	poolDictionaries: ''	category: 'RestAPI-Client'I am a component used to render a list request=========================accessing---------------------content	^ contentcontent: anObject		content := anObjecthostName	^ self class hostNameloginInformation        ^ loginInformation ifNil: [ loginInformation := RAAnonymousLoginInformation new ]	loginInformation: aLogin	loginInformation := aLoginroot	^ root ifNil: [ root := '' ]root: anObject	root := anObject---------------------rendering---------------------renderActionsOn: html	self		renderBackOn: html;		renderCreateADirectory: html;		renderPostAFile: htmlrenderBackOn: html	html div		with: [			html anchor				callback: [ self answer ];				with: 'Back' ]renderContentOn: html	| response |		self renderActionsOn: html.		response := ZnClient new url: self requestUrl; get.	response := WAJsonParser parse: response.	response := response sort: [ :a :b | (a at: #name) < (b at: #name) ].	html table		class: 'files';		with: [ 			response do:[:e | 				html tableRow 					with: [						(self isFile: e)							ifTrue: [ self renderFile:e on: html ]							ifFalse: [ self renderDirectory: e on: html ] ] ] ]renderCreateADirectory: html	html div		with: [			html anchor				callback: [ self call: (RACreateDirectoryComponent root: (self hostName, '/api/directory/', self root)) ];				with: 'Create a new directory' ]renderDirectory: dir on: html	| url |								url := '/api/directory/', self root, '/', (dir at: #name), self loginInformation asURLOption.	html tableData: [ html text: (dir at: #permissions)].			html tableData: [ 		html anchor			callback: [ self call: ((RAAnswerComponent with: url)				root: (dir at: #name)) ];			with: (dir at: #name) ]renderFile: file on: html	| url |								url :=  '/api/file/', self root, (file at: #name), self loginInformation asURLOption.	html tableData: [ html text: (file at: #permissions) ].		html tableData: [		html anchor			url: url;			with: (file at: #name) ].		html tableData: [ html text: (file at: #size)].			html tableData: [ html span		with: [			html anchor				onClick: (html jQuery ajax 					type: 'DELETE';					url: url;					"callback: [:d | self halt];"					yourself);				with: '[x]' ] ]renderPostAFile: html	html div		with: [			html anchor				callback: [ self call: (RAUploadFileComponent root: (self hostName, '/api/directory/', self root)) ];				with: 'Upload a file' ]respondRendered	self requestContext respond: [:response |		response			contentType: WAMimeType textHtml;			nextPutAll: (WAHtmlCanvas builder				fullDocument: true;				rootBlock: [ :root | self updateRoot: root ];				render: [ :canvas | self renderContentOn: canvas ])].---------------------testing---------------------isFile: aDictionary	^ (aDictionary at: #permissions) first == $----------------------private---------------------requestUrl	^ String streamContents: [ :stream | stream << self hostName << self content << self loginInformation asURLOption ]---------------------updating---------------------updateRoot: aRoot	super updateRoot: aRoot.		aRoot javascript		url: '//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js'.---------------------