RAAbstractBindingWrapper subclass: #RAFTPWrapper	instanceVariableNames: 'client hostIP port loginInformation'	classVariableNames: ''	poolDictionaries: ''	category: 'RestAPI'I am a binder from the REST api to FTP=========================accessing---------------------client	^ client ifNil: [ client := FTPClient new ]client: anObject	client := anObjecthostIP	^ hostIP ifNil: [ hostIP := #[127 0 0 1] ]loginInformation	^ loginInformation ifNil: [ loginInformation := RAAnonymousLoginInformation new ]loginInformation: anObject	loginInformation := anObjectport	^ port ifNil: [ port := 2163 ]---------------------private---------------------connect	self client openOnHost: self hostIP port: self portlogin	self loginInformation loginTo: self clientquit	self client quit.	loginInformation := nil---------------------get-private------------------------------------------get---------------------getDirectory: aPath	^ self sendQuery: [ 		self client changeDirectoryTo: aPath.		self client getDirectory ]getFileNamed: aName type: type	type = 'binary'		ifTrue: [ ^ self sendBinaryQuery: [ self client getFileNamed: aName ] ].	type = 'ascii'		ifTrue: [ ^ self sendAsciiQuery: [ self client getFileNamed: aName ] ].getWorkingDirectory	^ self sendQuery: [ self client pwd ]---------------------setting---------------------hostIP: anObject	hostIP := anObjectport: anObject	port := anObject---------------------post---------------------createDirectory: name at: path		^ self sendQuery: [ 		self client changeDirectoryTo: path.		self client makeDirectory: name ]---------------------put---------------------createNewFile: name at: path	self sendQuery: [		self client changeDirectoryTo: path.		self client putFileNamed: (path, '/', name) as: name ]---------------------delete---------------------deleteFile: aPath	self sendQuery: [ self client removeFileNamed: aPath ].	^ 'File removed'---------------------queries---------------------sendAsciiQuery: aBlock	| result |	self connect.	self login.		self client ascii.	result := aBlock value.	self quit.		^ result asStringsendBinaryQuery: aBlock	| result |	self connect.	self login.		self client binary.	result := aBlock value.	self quit.		^ result asByteArraysendQuery: aBlock	^ self sendAsciiQuery: aBlock---------------------